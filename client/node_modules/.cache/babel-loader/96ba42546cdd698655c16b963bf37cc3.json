{"ast":null,"code":"var _jsxFileName = \"/Users/hooliombp/LAMBDACLASS/WebApplications-2/3-Advance-Web-Applications/Sprint/web-sprint-challenge-advanced-web-applications/client/src/components/ColorList.js\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { axiosWithAuth } from \"../utils/auth\";\nconst initialColor = {\n  color: \"\",\n  code: {\n    hex: \"\"\n  }\n};\n\nconst ColorList = ({\n  colors,\n  updateColors\n}) => {\n  console.log(colors);\n  const [editing, setEditing] = useState(false);\n  const [colorToEdit, setColorToEdit] = useState(initialColor);\n  const [newColor, setNewColor] = useState({\n    color: \"\",\n    code: {\n      hex: \"\"\n    }\n  });\n\n  const editColor = color => {\n    setEditing(true);\n    setColorToEdit(color);\n  };\n\n  const saveEdit = e => {\n    e.preventDefault(); // Make a put request to save your updated color\n    // think about where will you get the id from...\n    // where is is saved right now?\n\n    axiosWithAuth().put(`/api/colors/${colorToEdit.id}`, colorToEdit).then(res => {\n      setEditing(false);\n      console.log(colorToEdit);\n    }).catch(err => {\n      throw err;\n    });\n    window.location.reload(false);\n  };\n\n  const deleteColor = id => {\n    if (window.confirm(\"Are you sure you want to delete this color?\")) {\n      updateColors(colors.filter(color => color.id !== id));\n      axiosWithAuth().delete(`/api/colors/${id}`).then(res => {\n        console.log(`Color with ID: ${id}, was deleted`);\n      }).catch(err => {\n        throw err;\n      });\n      window.location.reload(false);\n    }\n  };\n\n  const handleNewColor = e => {\n    e.preventDefault();\n    axiosWithAuth().post('/api/colors', newColor).then(res => {\n      console.log(newColor);\n    }).catch(err => {\n      throw err;\n    });\n    window.location.reload(false);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"colors-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"colors\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, colors.map(color => React.createElement(\"li\", {\n    key: color.color,\n    onClick: () => editColor(color),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"delete\",\n    onClick: e => {\n      e.stopPropagation();\n      deleteColor(color.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"x\"), \" \", color.color), React.createElement(\"div\", {\n    className: \"color-box\",\n    style: {\n      backgroundColor: color.code.hex\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })))), editing && React.createElement(\"form\", {\n    onSubmit: saveEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"edit color\"), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"color name:\", React.createElement(\"input\", {\n    onChange: e => setColorToEdit({ ...colorToEdit,\n      color: e.target.value\n    }),\n    value: colorToEdit.color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"hex code:\", React.createElement(\"input\", {\n    onChange: e => setColorToEdit({ ...colorToEdit,\n      code: {\n        hex: e.target.value\n      }\n    }),\n    value: colorToEdit.code.hex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"button-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"save\"), React.createElement(\"button\", {\n    onClick: () => setEditing(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"cancel\"))), React.createElement(\"div\", {\n    className: \"spacer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    onSubmit: handleNewColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"color name:\", React.createElement(\"input\", {\n    onChange: e => setNewColor({ ...newColor,\n      color: e.target.value\n    }),\n    value: newColor.color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"hex code:\", React.createElement(\"input\", {\n    onChange: e => setNewColor({ ...newColor,\n      code: {\n        hex: e.target.value\n      }\n    }),\n    value: newColor.code.hex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"Add Color\")));\n};\n\nexport default ColorList;","map":{"version":3,"sources":["/Users/hooliombp/LAMBDACLASS/WebApplications-2/3-Advance-Web-Applications/Sprint/web-sprint-challenge-advanced-web-applications/client/src/components/ColorList.js"],"names":["React","useState","axios","axiosWithAuth","initialColor","color","code","hex","ColorList","colors","updateColors","console","log","editing","setEditing","colorToEdit","setColorToEdit","newColor","setNewColor","editColor","saveEdit","e","preventDefault","put","id","then","res","catch","err","window","location","reload","deleteColor","confirm","filter","delete","handleNewColor","post","map","stopPropagation","backgroundColor","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { axiosWithAuth } from \"../utils/auth\";\n\nconst initialColor = {\n  color: \"\",\n  code: { hex: \"\" }\n};\n\nconst ColorList = ({ colors, updateColors }) => {\n  console.log(colors);\n  const [editing, setEditing] = useState(false);\n  const [colorToEdit, setColorToEdit] = useState(initialColor);\n  const [newColor, setNewColor] = useState({\n    color: \"\",\n    code: { hex: \"\" }\n  });\n\n  const editColor = color => {\n    setEditing(true);\n    setColorToEdit(color);\n  };\n\n  const saveEdit = e => {\n    e.preventDefault();\n    // Make a put request to save your updated color\n    // think about where will you get the id from...\n    // where is is saved right now?\n    axiosWithAuth()\n      .put(`/api/colors/${colorToEdit.id}`, colorToEdit)\n      .then(res => {\n        setEditing(false);\n        console.log(colorToEdit);\n      })\n      .catch(err => {\n        throw err;\n      });\n    window.location.reload(false);\n  };\n\n  const deleteColor = id => {\n    if (window.confirm(\"Are you sure you want to delete this color?\")) {\n      updateColors(colors.filter(color => color.id !== id));\n\n      axiosWithAuth()\n        .delete(`/api/colors/${id}`)\n        .then(res => {\n          console.log(`Color with ID: ${id}, was deleted`);\n        })\n        .catch(err => {\n          throw err;\n        });\n      window.location.reload(false);\n    }\n  };\n\n  const handleNewColor = (e) => {\n    e.preventDefault()\n\n    axiosWithAuth().post('/api/colors', newColor)\n      .then(res => {\n        console.log(newColor)\n      })\n      .catch(err => {\n        throw (err)\n      })\n    window.location.reload(false);\n  }\n\n  return (\n    <div className=\"colors-wrap\">\n      <p>colors</p>\n      <ul>\n        {colors.map(color => (\n          <li key={color.color} onClick={() => editColor(color)}>\n            <span>\n              <span\n                className=\"delete\"\n                onClick={e => {\n                  e.stopPropagation();\n                  deleteColor(color.id);\n                }}\n              >\n                x\n              </span>{\" \"}\n              {color.color}\n            </span>\n            <div\n              className=\"color-box\"\n              style={{ backgroundColor: color.code.hex }}\n            />\n          </li>\n        ))}\n      </ul>\n      {editing && (\n        <form onSubmit={saveEdit}>\n          <legend>edit color</legend>\n          <label>\n            color name:\n            <input\n              onChange={e =>\n                setColorToEdit({ ...colorToEdit, color: e.target.value })\n              }\n              value={colorToEdit.color}\n            />\n          </label>\n          <label>\n            hex code:\n            <input\n              onChange={e =>\n                setColorToEdit({\n                  ...colorToEdit,\n                  code: { hex: e.target.value }\n                })\n              }\n              value={colorToEdit.code.hex}\n            />\n          </label>\n          <div className=\"button-row\">\n            <button type=\"submit\">save</button>\n            <button onClick={() => setEditing(false)}>cancel</button>\n          </div>\n        </form>\n      )}\n      <div className=\"spacer\" />\n      <form onSubmit={handleNewColor}>\n        <label>\n          color name:\n            <input\n            onChange={e =>\n              setNewColor({ ...newColor, color: e.target.value })\n            }\n            value={newColor.color}\n          />\n        </label>\n        <label>\n          hex code:\n            <input\n            onChange={e =>\n              setNewColor({\n                ...newColor,\n                code: { hex: e.target.value }\n              })\n            }\n            value={newColor.code.hex}\n          />\n        </label>\n\n        <button type='submit'>Add Color</button>\n      </form>\n    </div>\n  );\n};\n\nexport default ColorList;"]},"metadata":{},"sourceType":"module"}